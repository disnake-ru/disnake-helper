import datetime

import disnake
from disnake.ext import commands

from core import DisnakeBot, Color, Roles


class Moderation(commands.Cog):
    def __init__(self, bot):
        self.bot: DisnakeBot = bot

    @commands.slash_command(
        name=disnake.Localized("mod", key="MOD")
    )
    async def mod(self, interaction):
        ...

    @commands.has_any_role(Roles.MODER, Roles.HELPER)
    @mod.sub_command(
        name=disnake.Localized("mute", key="MUTE"),
        description=disnake.Localized("Mute the calmbreaker!", key="MUTE_DESCR")
    )
    async def mute(
        self,
        interaction: disnake.GuildCommandInteraction,
        member: disnake.Member = commands.Param(
            name=disnake.Localized("member", key="TARGET_MEMBER"),
            description=disnake.Localized(
                "The calmbreaker which his fate have decided by the Council",
                key="MUTE_MEMBER_DESCR"
            )
        ),
        reason: str = commands.Param(
            name=disnake.Localized("reason", key="REASON"),
            description=disnake.Localized("Provide the reason", key="WHY"),
            default='Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞'
        ),
        days: int = commands.Param(
            name=disnake.Localized("days", key="MUTE_DAYS"),
            description=disnake.Localized("Amount of days of punishment", key="MUTE_DAYS_DESCR"),
            max_value=28,
            min_value=0,
            default=0
        ),
        hours: int = commands.Param(
            name=disnake.Localized("hours", key="MUTE_HOURS"),
            description=disnake.Localized("Amount of hours of punishment", key="MUTE_HOURS_DESCR"),
            max_value=24,
            min_value=0,
            default=0
        ),
        minutes: int = commands.Param(
            name=disnake.Localized("minuets", key="MUTE_MINUTES"),
            description=disnake.Localized("Amount of minutes of punishment", key="MUTE_MINUTES_DESCR"),
            max_value=60,
            min_value=0,
            default=0
        ),
    ):
        await interaction.response.defer(ephemeral=True)
        time = datetime.timedelta(days=days, hours=hours, minutes=minutes)
        embed = disnake.Embed(
            title='–ú—å—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
            color=Color.GRAY
        )
        embed.set_author(
            name=member,
            icon_url=member.avatar.url
        )
        embed.add_field(
            name="–ü—Ä–∏—á–∏–Ω–∞:",
            value=reason if reason != "Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞" else "*–ò—Å—Ç–æ—Ä–∏—è —É–º–∞–ª—á–∏–≤–∞–µ—Ç...*"
        )

        await member.timeout(duration=time, reason=reason)
        await interaction.channel.send(embed=embed)
        await interaction.send("üëç –ì–æ—Ç–æ–≤–æ")

    @commands.has_role(Roles.MODER)
    @mod.sub_command(
        name=disnake.Localized("gulag", key="GULAG"),
        description=disnake.Localized("Send the unwanted person to Siberia...", key="GULAG_DESCR")
    )
    async def ban(
        self,
        interaction: disnake.GuildCommandInteraction,
        member: disnake.Member = commands.Param(
            name=disnake.Localized("villain", key="GULAG_TARGET"),
            description=disnake.Localized("Who deserved to be sent to GULAG?", key="GULAG_TARGET_DESCR")
        ),
        reason: str = commands.Param(
            name=disnake.Localized("reason", key="REASON"),
            description=disnake.Localized("Announce the reason!", key="GULAG_REASON_DESCR"),
            default="Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞"
        ),
    ):
        await interaction.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title='–°—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ì–£–õ–ê–ì',
            description=f"*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø—Ä–µ–¥—Å—Ç–∞–ª –ø–µ—Ä–µ–¥ **–°–æ–≤–µ—Ç—Å–∫–∏–º –°–æ—é–∑–æ–º** –ø–æ –æ–±–≤–∏–Ω–µ–Ω–∏—é –≤ –ø–æ–∫—É—à–µ–Ω–∏–∏ –Ω–∞ **–°—Ç–∞–ª–∏–Ω–∞**...*",
            color=Color.GRAY
        )
        embed.set_author(
            name=member,
            icon_url=member.avatar.url
        )
        embed.add_field(
            name='–ü—Ä–∏—á–∏–Ω–∞ —Å—Å—ã–ª–∫–∏:',
            value=reason if reason != "Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞" else "*–ò—Å—Ç–æ—Ä–∏—è —É–º–∞–ª—á–∏–≤–∞–µ—Ç...*"
        )

        await member.ban(reason=reason)
        await interaction.channel.send(embed=embed)
        await interaction.send("üëç –ì–æ—Ç–æ–≤–æ")

    @commands.has_role(Roles.MODER)
    @mod.sub_command(
        name=disnake.Localized("kick", key="KICK"),
        description=disnake.Localized("Kick member", key="KICK_DESCR")
    )
    async def kick(
        self,
        interaction: disnake.GuildCommandInteraction,
        member: disnake.Member = commands.Param(
            name=disnake.Localized("member", key="TARGET_MEMBER"),
            description=disnake.Localized("Provide the reason", key="WHY")
        ),
        reason: str = commands.Param(
            name=disnake.Localized("reason", key="REASON"),
            description=disnake.Localized("Provide the reason", key="WHY"),
            default="Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞"
        ),
    ):
        await interaction.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title='–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
            color=Color.GRAY
        )
        embed.set_author(
            name=member,
            icon_url=member.avatar.url
        )
        embed.add_field(
            name='–ü—Ä–∏—á–∏–Ω–∞:',
            value=reason if reason != "Not provided | –ù–µ —É–∫–∞–∑–∞–Ω–∞" else "*–ò—Å—Ç–æ—Ä–∏—è —É–º–∞–ª—á–∏–≤–∞–µ—Ç...*"
        )

        await member.kick(reason=reason)
        await interaction.channel.send(embed=embed)
        await interaction.send("üëç –ì–æ—Ç–æ–≤–æ")

    @commands.slash_command(
        name=disnake.Localized("solved", key="POST_SOLVED"),
        description=disnake.Localized(
            "Mark this post as solved and lock it",
            key="POST_SOLVED_DESCR"
        )
    )
    async def solved(self, interaction: disnake.GuildCommandInteraction):
        if interaction.channel.parent_id is None:
            return await interaction.send("‚ùå –ù–µ–ª—å–∑—è –∑–∞–∫—Ä—ã—Ç—å –Ω–µ –ø–æ—Å—Ç!", ephemeral=True)

        await interaction.response.defer(ephemeral=True)

        if interaction.channel.owner.id != interaction.author.id and not interaction.author.guild_permissions.manage_threads:
            return await interaction.send("‚úã –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–∫—Ä—ã—Ç–∏—é —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞!")

        post: disnake.Thread = interaction.channel
        role = interaction.guild.get_role(Roles.HELP_ACTIVE)
        tag = post.parent.get_tag_by_name("–†–µ—à–µ–Ω–æ")

        await post.owner.remove_roles(role, reason='–ó–∞–∫—Ä—ã–ª –∑–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏')
        await post.send("–ü–æ—Å—Ç –∑–∞–∫—Ä—ã—Ç!")
        await post.add_tags(tag)
        await post.edit(locked=True, archived=True)
        await interaction.send("–ì–æ—Ç–æ–≤–æ!")


def setup(bot):
    bot.add_cog(Moderation(bot))
